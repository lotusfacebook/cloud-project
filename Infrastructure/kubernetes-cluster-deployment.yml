name: $(year:yyyy).$(Month).$(DayOfMonth)$(rev:.r)
trigger:
- main

stages:
  - stage: Deploy_Cluster
    displayName: 'Deploy Kubernetes Cluster'
    jobs:
    - job: Deploy_Kubernetes_Cluster
      pool:
        vmImage: ubuntu-latest
      variables:
        az_region: eastus
        resource_group_name: cloudproject
        serviceconnection: cloudprojectsp
        subscription: 'Visual Studio Enterprise'
        sa_prefix: cpstoragecloudproject
        sa_container_name: cpblob
        tfstateFile: terraform.tfstate

      steps:
      - checkout: self
      - pwsh: |
          Get-ChildItem $(System.DefaultWorkingDirectory) -Recurse
        name: DebugCheckout
      - task: AzureCLI@2
        name: Create_Storage
        inputs:
          azureSubscription: 'cloudprojectsp'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az storage account create --resource-group $(resource_group_name) --name "$(sa_prefix)" --sku Standard_LRS --encryption-services blob
            az storage container create --name $(sa_container_name) --account-name "$(sa_prefix)" --auth-mode login
      - task: Bash@3
        displayName: Display Directory
        inputs:
          name: 'Display_Directory'
          targetType: 'inline'
          script: |
            echo "Print Working Directory"
            pwd
            echo "List files in current Directory"
            ls -la
      - task: TerraformInstaller@0
        displayName: Terraform Installation
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV3@3
        displayName: Terraform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Infrastructure'
          backendServiceArm: 'cloudprojectsp'
          backendAzureRmResourceGroupName: '$(resource_group_name)'
          backendAzureRmStorageAccountName: '$(sa_prefix)'
          backendAzureRmContainerName: '$(sa_container_name)'
          backendAzureRmKey: '$(tfstateFile)'

      - task: TerraformTaskV3@3
        displayName: Terraform Plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Infrastructure'
          commandOptions: '-out=tfplan'
          environmentServiceNameAzureRM: 'cloudprojectsp'

      - task: TerraformTaskV3@3
        displayName: Terraform Apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Infrastructure'
          commandOptions: 'tfplan'
          environmentServiceNameAzureRM: 'cloudprojectsp'

