apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - name: springboot-app
        image: cloudprojectacr.azurecr.io/promiseuche/cloud-project:popularapp
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-app-svc
spec:
  selector:
    app: springboot-app-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: springboot-app-ingress
  annotations:
    springboot.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: springboot-app-class
  rules:
  - http:
      paths:
      - path: /api/employees
        pathType: Prefix
        backend:
          service:
            name: springboot-app-svc
            port:
              number: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-server
  template:
    metadata:
      labels:
        app: web-server
    spec:
      containers:
      - name: web-server-con
        image: nginx:1.16.1
        ports:
        - containerPort: 5000
# service type loadbalancer       
---
apiVersion: v1
kind: Service
metadata:
  name:  web-server-svc
spec:
  selector:
    app:  web-server
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
#Prometheus deployment
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: prom
  labels:
    app: prom
spec:
  selector:
    matchLabels:
      app: prom
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prom
    spec: 
      containers:
      - name: prom
        image: prom/prometheus
        ports:
        - containerPort: 9090
#Expose prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prom
  labels:
    app: prom
spec:
  selector:
    app: prom
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: LoadBalancer
#Grafana deployment
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: grafana
    spec: 
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
        - containerPort: 3000
#Expose Grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
  type: LoadBalancer

